[easy_install]
# Tahoe-LAFS actually does work at least as well as any package works when
# zipped, but zipping eggs causes various problems
# (http://bugs.python.org/setuptools/issue33 ), and generally makes it harder
# for people to get at the source code, and doesn't actually provide any
# benefits that I am aware of.
zip_ok=False

# Tahoe-LAFS depends upon several libraries (foolscap, twisted, pycryptopp,
# zfec, and others). Left to its own devices, setuptools will look on PyPI for
# these and will download them at build time. The 'find_links=' entry in
# setup.cfg causes setuptools to look for these dependent tarballs in
# tahoe-deps/ and ../tahoe-deps/ before it resorts to downloading them from
# PyPI.

# http://tahoe-lafs.org/source/tahoe-lafs/deps/tahoe-deps.tar.gz contains a
# bundle of these dependencies (as Python source distributions or "sdists"). So
# it you want to avoid the build-time download (say, if you're on an airplane,
# or a desert island), just grab a copy and unpack it in your tahoe darcs tree.

# Alternatively, if you're building from a release/nightly tarball instead of
# a darcs tree, the 'sumo' tarball variant will include all of these
# dependencies in the tahoe-deps/ directory.

find_links=misc/dependencies tahoe-deps ../tahoe-deps
 http://tahoe-lafs.org/source/tahoe-lafs/deps/tahoe-dep-sdists/
 http://tahoe-lafs.org/source/tahoe-lafs/deps/tahoe-lafs-dep-eggs/

# The following is a directory on the test grid which holds a bunch of packages
# of dependencies.  It is commented-out because the test grid has gone away and
# a new one -- the Volunteer Test Grid -- is not yet publicly usable.
# http://testgrid.allmydata.org:3567/uri/URI%3ADIR2-RO%3Asnrfwfxatrci35zdgjnzxxx2ke%3Aunarxv347edtku3xzmefy4mcdmfngxzeb72iyqcadbjzjpczjx5a/index.html

# Other sites that we might want to list:
# http://sourceforge.net/project/showfiles.php?group_id=78018&package_id=79063
# http://pypi.python.org/pypi/pywin32
# (See http://tahoe-lafs.org/trac/tahoe-lafs/ticket/142 .)

[aliases]
build = darcsver --count-all-patches develop --prefix=support make_executable build
test = darcsver --count-all-patches develop --prefix=support make_executable build trial
sdist = darcsver --count-all-patches sdist
install = darcsver --count-all-patches install
bdist_egg = darcsver --count-all-patches bdist_egg
trial = darcsver --count-all-patches trial
sdist_dsc = darcsver --count-all-patches sdist_dsc
test_mac_diskimage = darcsver --count-all-patches test_mac_diskimage
